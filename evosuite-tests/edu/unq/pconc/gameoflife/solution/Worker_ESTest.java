/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:09:48 ART 2016
 */

package edu.unq.pconc.gameoflife.solution;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true) 
public class Worker_ESTest extends Worker_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      gameOfLifeGrid0.filas = 3509;
      gameOfLifeGrid0.clear();
      gameOfLifeGrid0.finalizaron = (-3846);
      Worker worker0 = new Worker((-3846), gameOfLifeGrid0, (-131), 0);
      GameOfLifeGrid gameOfLifeGrid1 = worker0.gof;
      worker0.run();
      worker0.run();
      gameOfLifeGrid0.getDimension();
      int int0 = worker0.cantColumnasFija;
      GameOfLifeGrid gameOfLifeGrid2 = worker0.gof;
      int int1 = worker0.cantColumnasFija;
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test01()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      Worker worker0 = new Worker(1705, gameOfLifeGrid0, (-621), (-621));
      worker0.run();
      gameOfLifeGrid0.filas = 1705;
      boolean[][] booleanArray0 = new boolean[2][6];
      boolean[] booleanArray1 = new boolean[1];
      booleanArray1[0] = false;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[9];
      booleanArray2[0] = false;
      booleanArray2[1] = false;
      booleanArray2[3] = false;
      booleanArray2[5] = false;
      booleanArray2[6] = false;
      booleanArray2[7] = false;
      booleanArray2[8] = false;
      booleanArray0[1] = booleanArray2;
      gameOfLifeGrid0.tablero = booleanArray0;
      worker0.posicionInicial = 1691;
      worker0.cantColumnasFija = 3574;
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1691
         //
         assertThrownBy("edu.unq.pconc.gameoflife.solution.Worker", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      Worker worker0 = new Worker(1685, gameOfLifeGrid0, 590, 466);
      gameOfLifeGrid0.clear();
      boolean[][] booleanArray0 = new boolean[7][1];
      boolean[] booleanArray1 = new boolean[5];
      booleanArray1[0] = true;
      booleanArray1[1] = false;
      booleanArray1[2] = true;
      booleanArray1[3] = false;
      booleanArray1[4] = false;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[9];
      booleanArray2[0] = true;
      booleanArray2[1] = true;
      booleanArray2[2] = true;
      booleanArray2[3] = true;
      booleanArray2[4] = true;
      booleanArray2[5] = true;
      booleanArray2[6] = true;
      booleanArray2[7] = true;
      booleanArray2[8] = true;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[5];
      booleanArray3[0] = false;
      booleanArray3[1] = true;
      booleanArray3[2] = false;
      booleanArray3[3] = false;
      booleanArray3[4] = false;
      booleanArray0[2] = booleanArray3;
      boolean[] booleanArray4 = new boolean[4];
      booleanArray4[0] = false;
      booleanArray4[1] = false;
      booleanArray4[2] = false;
      booleanArray4[3] = false;
      booleanArray0[3] = booleanArray4;
      boolean[] booleanArray5 = new boolean[0];
      booleanArray0[4] = booleanArray5;
      boolean[] booleanArray6 = new boolean[7];
      booleanArray6[0] = false;
      booleanArray6[1] = true;
      booleanArray6[2] = false;
      booleanArray6[3] = false;
      booleanArray6[4] = false;
      booleanArray6[5] = true;
      booleanArray6[6] = true;
      booleanArray0[5] = booleanArray6;
      boolean[] booleanArray7 = new boolean[5];
      booleanArray7[0] = false;
      booleanArray7[1] = false;
      booleanArray7[2] = false;
      booleanArray7[3] = true;
      booleanArray7[4] = false;
      booleanArray0[6] = booleanArray7;
      gameOfLifeGrid0.tableroAux = booleanArray0;
      worker0.cantColumnas = 1721;
      gameOfLifeGrid0.resize(466, 1721);
      worker0.cantColumnasFija = 1685;
      worker0.posicionInicial = 3421;
      int int0 = worker0.cantColumnas;
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test03()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      gameOfLifeGrid0.filas = 1;
      GameOfLifeGrid gameOfLifeGrid1 = new GameOfLifeGrid();
      Worker worker0 = new Worker(3, gameOfLifeGrid1, 1, 0);
      worker0.gof = gameOfLifeGrid0;
      worker0.run();
      worker0.posicionInicial = 0;
      worker0.cantColumnasFija = 0;
  }

  @Test
  public void test04()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      Worker worker0 = new Worker(1, gameOfLifeGrid0, (-1), 1305);
      worker0.gof = gameOfLifeGrid0;
      gameOfLifeGrid0.resize(1305, 2617);
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test05()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      Worker worker0 = new Worker(775, gameOfLifeGrid0, 775, 775);
      gameOfLifeGrid0.resize(0, 0);
      worker0.cantColumnasFija = 1;
      gameOfLifeGrid0.filas = 3175;
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  public void test06()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      gameOfLifeGrid0.filas = (-1);
      gameOfLifeGrid0.finalizaron = 0;
      Worker worker0 = new Worker(0, gameOfLifeGrid0, 0, 508);
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("edu.unq.pconc.gameoflife.solution.Worker", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      Worker worker0 = new Worker(2, gameOfLifeGrid0, (-302), 0);
      worker0.cantColumnas = 2;
  }

  @Test
  public void test08()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      Worker worker0 = new Worker(0, gameOfLifeGrid0, 0, 0);
      worker0.cantColumnas = 1078;
      int int0 = worker0.posicionInicial;
      int int1 = worker0.cantColumnasFija;
  }

  @Test
  public void test09()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      boolean[][] booleanArray0 = new boolean[1][1];
      gameOfLifeGrid0.tablero = booleanArray0;
      gameOfLifeGrid0.tablero = booleanArray0;
  }

  @Test
  public void test10()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      boolean[][] booleanArray0 = new boolean[8][3];
      boolean[] booleanArray1 = new boolean[4];
      booleanArray1[0] = false;
      booleanArray1[1] = false;
      booleanArray1[2] = false;
      booleanArray1[3] = true;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[4];
      booleanArray2[0] = false;
      booleanArray2[1] = false;
      booleanArray2[2] = false;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[6];
      booleanArray3[0] = false;
      booleanArray3[1] = false;
      booleanArray3[2] = false;
      booleanArray3[3] = false;
      booleanArray3[4] = false;
      booleanArray3[5] = true;
      booleanArray0[2] = booleanArray3;
      boolean[] booleanArray4 = new boolean[0];
      booleanArray0[3] = booleanArray4;
      boolean[] booleanArray5 = new boolean[5];
      booleanArray5[0] = false;
      booleanArray5[1] = false;
      booleanArray5[2] = false;
      booleanArray5[3] = true;
      booleanArray5[4] = false;
      booleanArray0[4] = booleanArray5;
      boolean[] booleanArray6 = new boolean[5];
      booleanArray6[0] = true;
      booleanArray6[1] = false;
      booleanArray6[2] = false;
      booleanArray6[3] = true;
      booleanArray6[4] = false;
      booleanArray0[5] = booleanArray6;
      boolean[] booleanArray7 = new boolean[7];
      booleanArray7[0] = false;
      booleanArray7[1] = false;
      booleanArray7[2] = false;
      booleanArray7[3] = false;
      booleanArray7[4] = false;
      booleanArray7[5] = false;
      booleanArray7[6] = false;
      boolean[] booleanArray8 = new boolean[5];
      booleanArray8[0] = false;
      booleanArray8[1] = false;
      booleanArray8[2] = false;
      booleanArray8[3] = false;
      booleanArray8[4] = true;
      booleanArray0[7] = booleanArray8;
      gameOfLifeGrid0.tablero = booleanArray0;
      gameOfLifeGrid0.filas = 1;
      Worker worker0 = new Worker(1, gameOfLifeGrid0, 1, 1);
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         assertThrownBy("edu.unq.pconc.gameoflife.solution.Worker", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      Worker worker0 = new Worker((-1), gameOfLifeGrid0, (-264), (-264));
      worker0.posicionInicial = 3;
      boolean[][] booleanArray0 = new boolean[3][8];
      gameOfLifeGrid0.setThreads((-264));
      booleanArray0[2] = booleanArray0[1];
      gameOfLifeGrid0.tableroAux = booleanArray0;
      gameOfLifeGrid0.getDimension();
      gameOfLifeGrid0.filas = 1723;
      int int0 = worker0.cantColumnasFija;
      int int1 = worker0.posicionInicial;
      int int2 = worker0.cantColumnas;
      assertTrue(int2 == int0);
      
      Worker worker1 = new Worker(1, gameOfLifeGrid0, (-264), (-2817));
      worker0.run();
      int int3 = worker0.cantColumnasFija;
      assertEquals((-264), int3);
  }

  @Test
  public void test12()  throws Throwable  {
      GameOfLifeGrid gameOfLifeGrid0 = new GameOfLifeGrid();
      int int0 = 0;
      gameOfLifeGrid0.resize(2336, 3);
      Worker worker0 = new Worker(3, gameOfLifeGrid0, 0, 945);
      worker0.cantColumnasFija = (-1985);
      worker0.cantColumnasFija = (-1081);
      worker0.cantColumnasFija = (-1081);
      worker0.gof = gameOfLifeGrid0;
      int int1 = worker0.posicionInicial;
      gameOfLifeGrid0.threads = 0;
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
